/*
 * HelpForm.java
 * 
 *  Copyright (C) 2008 Giuseppe Profiti
 *  
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU General Public License for more details.
 */
package solowiki;

import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.event.HyperlinkEvent;
import javax.swing.event.HyperlinkListener;

/**
 *
 * @author  Giuseppe Profiti
 */
public class HelpForm extends javax.swing.JFrame
        implements HyperlinkListener {

    boolean followlinks = false;
    Desktop desktop;

    /** Creates new form HelpForm */
    public HelpForm() {
        if (Desktop.isDesktopSupported()) {
            desktop = Desktop.getDesktop();
            followlinks = true;
        }
        initComponents();
    }

    public void hyperlinkUpdate(HyperlinkEvent event) {
        if (event.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
            try {
                String url = event.getURL().toString();
                if (url.matches("((http:)|(mailto:))(.*)")) {
                    if (followlinks) {
                        URI uri = event.getURL().toURI();
                        if (url.matches("(http:)(.*)")) {
                            desktop.browse(uri);
                        } else {
                            desktop.mail(uri);
                        }
                    }
                } else {
                    helpPane.setPage(event.getURL());
                }
            } catch (URISyntaxException ex) {
                Logger.getLogger(HelpForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ioe) {
            // TODO Some warning to user
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        languageButtonGroup = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        helpPane = new javax.swing.JEditorPane();
        jPanel1 = new javax.swing.JPanel();
        englishToggleButton = new javax.swing.JToggleButton();
        italianToggleButton = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("solowiki/resources/MainWindow"); // NOI18N
        setTitle(bundle.getString("helpmenu")); // NOI18N
        setLocationByPlatform(true);

        helpPane.setContentType("text/html");
        helpPane.setEditable(false);
        try {
            helpPane.setPage(this.getClass().getResource("/doc/en/index.html"));
        } catch (java.io.IOException ioexc) {
            helpPane.setText("Unable to load help file.");
        }
        helpPane.addHyperlinkListener(this);
        jScrollPane1.setViewportView(helpPane);

        languageButtonGroup.add(englishToggleButton);
        englishToggleButton.setSelected(true);
        englishToggleButton.setText("English");
        englishToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                languageSelection(evt);
            }
        });

        languageButtonGroup.add(italianToggleButton);
        italianToggleButton.setText("Italiano");
        italianToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                languageSelection(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(englishToggleButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(italianToggleButton)
                .addContainerGap(500, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(englishToggleButton)
                .addComponent(italianToggleButton))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void languageSelection(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_languageSelection
        // TODO use locale to select the right page
        try {
            if (italianToggleButton.isSelected()) {

                helpPane.setPage(this.getClass().getResource("/doc/it/index.html"));
            } else if (englishToggleButton.isSelected()) {
                helpPane.setPage(this.getClass().getResource("/doc/en/index.html"));
            } else {
                helpPane.setPage(this.getClass().getResource("/doc/en/index.html"));
            }
        } catch (IOException ex) {
            Logger.getLogger(HelpForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_languageSelection

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new HelpForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton englishToggleButton;
    private javax.swing.JEditorPane helpPane;
    private javax.swing.JToggleButton italianToggleButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.ButtonGroup languageButtonGroup;
    // End of variables declaration//GEN-END:variables
}
